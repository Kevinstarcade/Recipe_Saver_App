// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipe_Saver_App.Data;

#nullable disable

namespace Recipe_Saver_App.Migrations
{
    [DbContext(typeof(RecipesContext))]
    [Migration("20250821040704_ScaffoldedCreate")]
    partial class ScaffoldedCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Recipe_Saver_App.Models.EfmigrationsLock", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Timestamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("__EFMigrationsLock");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IsCommonlyAvail")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NeedDefrosting")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<decimal>("CaloriesPerServing")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CarbsPerServing")
                        .HasColumnType("TEXT");

                    b.Property<string>("CuisineType")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FatPerServing")
                        .HasColumnType("TEXT");

                    b.Property<int>("IsFavourite")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("LastMade")
                        .HasColumnType("TEXT");

                    b.Property<string>("MealType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlanToCook")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Platform")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProteinPerServing")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("VideoURL");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IngredientID");

                    b.Property<string>("Quantifier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("RecipeID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "IngredientId" }, "IX_RecipeIngredients_IngredientID");

                    b.HasIndex(new[] { "RecipeId" }, "IX_RecipeIngredients_RecipeID");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.RecipeIngredient", b =>
                {
                    b.HasOne("Recipe_Saver_App.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recipe_Saver_App.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Recipe_Saver_App.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
